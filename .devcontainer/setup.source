## NOTE! This script should be sourced, not executed. 
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
if test -z "$BASH"
then echo "Please, source me using bash." ; kill -INT $$
fi
if [[ "${BASH_SOURCE[0]}" == "${0}" ]] 
then echo "You must source this script with bash, not execute it." ; kill -INT $$
fi

# versions
export NODENV_VERSION=20.11.0
export PYENV_VERSION=3.11.7
export GOENV_VERSION=1.21.6

# env 
export PYENV_ROOT="$HOME/.pyenv"
export NODENV_ROOT="$HOME/.nodenv"
export GOENV_ROOT="$HOME/.goenv"
export NUV_INSTALL_DIR="/usr/nuvolaris"

# git config
export GIT_EDITOR=vim

# prompt
parse_git_branch() {
     git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'
}
export PS1="[\[\e[32m\]\w:\[\e[91m\]\$(parse_git_branch)\[\e[00m\]]\n$ "

# Preflight checks
die() {
    echo ERROR: "$@"
    kill -INT $$
}

ok() {
    echo OK: "$@"
}

ko() {
    echo KO: "$@"
}

if ! which gcc >/dev/null
then die "Please install development tools"
else ok gcc
fi

if ! which git >/dev/null
then die "Please install git"
else ok git
fi

# Install Go
if test -e $GOENV_ROOT/$GOENV_VERSION
then ok goenv
else rm -Rvf $GOENV_ROOT 
     git clone https://github.com/syndbg/goenv.git $GOENV_ROOT
     touch $GOENV_ROOT/$GOENV_VERSION
fi
export GOBIN="$HOME/.local/bin"
export PATH="$GOBIN:$GOENV_ROOT/bin:$PATH"
eval "$(goenv init -)"
goenv install $GOENV_VERSION -s && touch $GOENV_ROOT/$GOENV_VERSION

# Install Node
if test -e $NODENV_ROOT/$NODENV_VERSION
then ok nodenv
else rm -Rvf $NODENV_ROOT
     git clone https://github.com/nodenv/nodenv.git $NODENV_ROOT
     mkdir "$NODENV_ROOT/plugins"
     git clone https://github.com/nodenv/node-build.git "$NODENV_ROOT"/plugins/node-build
fi
export PATH="$NODENV_ROOT/bin:$PATH"
eval "$(nodenv init -)"
nodenv install $NODENV_VERSION -s && touch $NODENV_ROOT/$NODENV_VERSION

# Install Python
if test -e $PYENV_ROOT/$PYENV_VERSION
then ok pyenv
else rm -Rvf $PYENV_ROOT
     git clone https://github.com/pyenv/pyenv.git $PYENV_ROOT
fi
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init --path)"
eval "$(pyenv init -)"
pyenv install $PYENV_VERSION -s && touch $PYENV_ROOT/$PYENV_VERSION
pip install --upgrade pip


# install yq
if ! which yq >/dev/null
then go install github.com/mikefarah/yq/v4@latest
else ok yq
fi

# install virtualenv
if ! which virtualenv >/dev/null
then pip install virtualenv
else ok virtualenv
fi

# install httpie
if ! which http >/dev/null
then pip install httpie
else ok httpie
fi

# install ipython
if ! which ipython >/dev/null
then pip install ipython
else ok httpie
fi

# install xonsh
if ! which xonsh >/dev/null
then pip install xonsh[full]
else ok xonsh
fi

# install poetry
if ! which poetry >/dev/null
then curl -sSL https://install.python-poetry.org | python3 -
else ok poetry
fi

# install watchdog
if ! which watchmedo >/dev/null
then pip install watchdog
else ok watchmedo
fi

# install jest
if ! which jest >/dev/null
then npm install -g jest
else ok jest
fi
export PATH="$(nodenv prefix)/bin:$PATH"

if ! test -e $GOBIN/z.sh
then curl -sL https://raw.githubusercontent.com/rupa/z/master/z.sh >$GOBIN/z.sh
else ok z
fi
source $GOBIN/z.sh

# Check existence of nuv cli installed via deb and add it to the classpath
if test -e $NUV_INSTALL_DIR
then
    export PATH="$PATH:$NUV_INSTALL_DIR"
    ok nuv
else 
    ko $NUV_INSTALL_DIR    
fi

# Check for kubectl
if ! which kubectl >/dev/null
then die "Please install kubectl"
else ok kubectl
fi

# replace
if ! which replace >/dev/null
then npm install -g replace
else ok replace
fi

# http-server
if ! which http-server >/dev/null
then npm install -g http-server 
else ok http-server
fi

# requirements_common
if ! test -e ~/.pyenv/requirements_common.txt
then 
     curl -sL https://raw.githubusercontent.com/nuvolaris/openwhisk-runtime-python/nuvolaris/core/requirements_common.txt > ~/.pyenv/requirements_common.txt
     pip install -r  ~/.pyenv/requirements_common.txt
fi


# devel and deploy
alias devel="task devel"
alias deploy="task deploy"

# setup
if test -e Taskfile.yml
then task setup
fi
